in case when the program exits with an error, please run the following command
kill -9 24726 
  -- {55240} cmd: /home/lorabit/mcsim/pin/intel64/bin/pinbin -t /home/lorabit/mcsim/Pthread/mypthreadtool -port 55240 -skip_first 40000 -- APP 
XOR
MOV
POP
MOV
AND
PUSH
PUSH
MOV
MOV
MOV
CALL_NEAR
PUSH
PUSH
XOR
PUSH
MOV
MOV
CPUID
SUB
CMP
MOV
SETZ
CMP
MOV
SETZ
MOV
MOV
TEST
MOV
MOV
JZ
CMP
JZ
CMP
MOV
MOV
SETZ
CMP
SETZ
TEST
JZ
LEA
LEA
LEA
LEA
MOV
MOV
CALL_NEAR
TEST
PUSH
JZ
MOV
MOV
MOV
CPUID
MOV
MOV
MOV
SHR
MOV
MOV
AND
MOV
MOV
SHR
AND
MOV
MOV
SHR
AND
MOV
MOV
AND
MOV
CMP
JZ
CMP
JLE
MOV
XOR
CPUID
MOV
MOV
MOV
MOV
MOV
TEST
JZ
XOR
XGETBV
MOV
AND
CMP
JZ
POP
RET_NEAR
TEST
JZ
OR
MOV
TEST
JZ
OR
AND
CMP
JZ
AND
JZ
OR
POP
RET_NEAR
CMP
MOV
MOV
JZ
MOV
TEST
JZ
OR
MOV
OR
CMP
MOV
JLE
MOV
ADD
MOV
CMP
MOV
JNBE
CMP
JNB
CMP
JNBE
CMP
JZ
JNBE
CMP
JZ
JNBE
CMP
MOV
JNZ
OR
JMP
AND
MOV
JZ
MOV
OR
JMP
TEST
JZ
OR
MOV
OR
CMP
MOV
JLE
MOV
MOV
CPUID
TEST
JZ
OR
MOV
MOV
MOV
JMP
MOV
MOV
JMP
MOV
TEST
JZ
OR
TEST
JZ
OR
CMP
JZ
CMP
JNZ
CMP
JZ
CMP
JZ
LEA
CMP
JBE
CMP
JNZ
CMP
JBE
AND
JMP
MOV
SUB
MOV
PUSH
MOV
MOV
MOV
MOV
MOV
MOV
CALL_NEAR
PUSH
PUSH
MOV
PUSH
PUSH
MOV
PUSH
MOV
MOV
SUB
TEST
MOV
MOV
MOV
JZ
MOV
TEST
MOV
SETZ
MOVZX
MOV
MOVSXD
LEA
MOV
MOV
MOV
NOP
ADD
CMP
JNZ
CALL_NEAR
XOR
MOV
JMP
MOVZX
MOV
MOVSXD
LEA
MOV
MOV
MOV
NOP
ADD
CMP
JNZ
CALL_NEAR
ADD
CMP
JNZ
CALL_NEAR
MOV
MOV
TEST
JZ
PUSH
PUSH
XOR
PUSH
PUSH
XOR
PUSH
PUSH
XOR
MOV
MOV
XOR
MOV
MOV
XOR
MOV
MOV
XOR
MOV
MOV
MOV
MOVZX
MOV
MOV
MOV
MOV
MOV
MOV
XOR
MOV
MOV
XOR
MOV
MOV
XOR
MOV
MOV
MOV
MOV
MOV
MOV
NOP
SUB
CMP
JNBE
JMP
MOV
MOV
MOV
NOP
ADD
MOV
TEST
JNZ
TEST
JNZ
TEST
JZ
SUB
CMP
JNBE
JMP
MOV
MOV
MOV
JMP
ADD
MOV
TEST
JNZ
TEST
JNZ
TEST
JZ
MOV
TEST
JZ
MOV
MOV
JMP
MOV
MOV
JMP
MOV
MOV
JMP
ADD
MOV
TEST
JNZ
TEST
JNZ
TEST
JZ
MOV
MOV
JMP
XOR
OR
JMP
XOR
OR
JMP
XOR
OR
JMP
XOR
OR
JMP
MOV
MOV
MOV
MOV
MOV
MOV
JMP
MOV
MOV
MOV
JMP
MOV
MOV
JMP
MOV
MOV
JMP
TEST
JZ
MOV
TEST
JZ
MOV
TEST
JZ
MOV
TEST
JZ
MOV
TEST
JZ
MOV
MOV
CMP
JZ
CMP
JZ
MOVZX
MOV
CMP
JZ
MOV
MOV
CMP
JZ
CMP
JZ
MOV
MOV
CMP
JZ
MOV
MOV
CMP
JZ
MOV
MOV
CMP
JZ
MOV
MOV
CMP
JNZ
TEST
MOV
SETNZ
TEST
SETNZ
OR
MOVZX
MOV
POP
POP
POP
POP
POP
POP
RET_NEAR
POP
POP
POP
POP
POP
POP
RET_NEAR
CMP
JNZ
MOV
TEST
JZ
CMP
JZ
MOV
TEST
JZ
MOV
CMP
JNB
CMP
MOV
MOV
JNZ
CALL_NEAR
PUSH
PUSH
SUB
LEA
CALL_NEAR
MOV
SYSCALL
CMP
JNB
RET_NEAR
TEST
LEA
JNZ
XOR
XOR
MOVSX
LEA
CMP
JNBE
MOVSX
LEA
SUB
LEA
CMP
JNBE
SHL
ADD
LEA
OR
CMP
JNZ
CMP
JNZ
ADD
POP
POP
RET_NEAR
MOVSX
LEA
CMP
JNBE
MOVSX
LEA
SUB
LEA
CMP
JNBE
NOP
LEA
ADD
LEA
MOVSX
LEA
CMP
JBE
CMP
JZ
MOV
ADD
SUB
SHL
SHL
POP
POP
RET_NEAR
ADD
POP
POP
RET_NEAR
TEST
JS
MOV
TEST
JNZ
MOV
CMP
JNLE
MOV
CMP
JNB
CMP
MOV
MOV
JNZ
NOP
CALL_NEAR
TEST
JNZ
LEA
TEST
JNZ
LEA
TEST
JNZ
RET_NEAR
ADD
MOV
CMP
JNB
CMP
MOV
JZ
MOV
CALL_NEAR
CALL_NEAR
LEA
TEST
JNZ
LEA
TEST
JZ
LEA
RET_NEAR
RET_NEAR
TEST
JNZ
LEA
TEST
JNZ
LEA
TEST
JNZ
RET_NEAR
LEA
TEST
JNZ
LEA
TEST
JZ
LEA
RET_NEAR
RET_NEAR
LEA
TEST
JZ
LEA
RET_NEAR
RET_NEAR
TEST
MOV
MOV
CMOVZ
RET_NEAR
LEA
TEST
JNZ
LEA
TEST
JZ
LEA
RET_NEAR
RET_NEAR
LEA
TEST
JNZ
TEST
JZ
LEA
TEST
JNZ
LEA
TEST
JZ
TEST
JZ
LEA
RET_NEAR
LEA
TEST
JNZ
LEA
TEST
JNZ
LEA
TEST
JZ
TEST
JZ
LEA
TEST
JNZ
LEA
TEST
JZ
TEST
JZ
LEA
TEST
JNZ
LEA
TEST
JNZ
RET_NEAR
LEA
TEST
JNZ
LEA
TEST
JNZ
LEA
RET_NEAR
RET_NEAR
LEA
TEST
JZ
LEA
RET_NEAR
TEST
JNZ
LEA
RET_NEAR
TEST
JZ
LEA
RET_NEAR
TEST
JNZ
LEA
RET_NEAR
TEST
JZ
LEA
RET_NEAR
CALL_NEAR
MOV
MOV
JMP
NYI: __pthread_initialize_minimal at: 0x49d2d0
PUSH
PUSH
PUSH
PUSH
PUSH
PUSH
MOV
SUB
MOV
TEST
JZ
MOV
LEA
SUB
LEA
CMP
JB
JMP
CMP
JNZ
MOV
MOV
MOV
MOV
CMP
MOV
CMOVB
JMP
ADD
CMP
JNB
CMP
JNZ
MOV
MOV
MOV
MOV
CMP
MOV
CMOVB
JMP
MOV
XOR
ADD
LEA
ADD
DIV
IMUL
ADD
MOV
CALL_NEAR
PUSH
PUSH
MOV
SUB
MOV
TEST
JZ
MOV
TEST
JNZ
CMP
JZ
XOR
CALL_NEAR
MOV
MOV
SYSCALL
CMP
MOV
JNBE
MOV
XOR
CMP
JNBE
RET_NEAR
TEST
MOV
JNS
JMP
CMP
JZ
JLE
MOV
ADD
SETB
TEST
JZ
LEA
CALL_NEAR
TEST
JS
ADD
MOV
POP
POP
RET_NEAR
MOV
LEA
MOV
NEG
MOV
AND
TEST
JZ
LEA
MOV
XOR
MOV
MOV
DIV
MOV
MOV
MOV
MOV
IMUL
SUB
MOV
ADD
MOV
CALL_NEAR
MOV
CMP
JB
CMP
JNBE
MOVUPS
MOVUPS
MOVUPS
MOVUPS
RET_NEAR
CMP
JNBE
CMP
JB
MOVUPS
MOVUPS
MOVUPS
MOVUPS
MOVUPS
MOVUPS
MOVUPS
MOVUPS
MOVUPS
MOVUPS
MOVUPS
MOVUPS
MOVUPS
MOVUPS
MOVUPS
MOVUPS
RET_NEAR
MOV
MOV
MOV
LEA
MOV
MOV
MOV
SYSCALL
TEST
MOV
JZ
MOV
CALL_NEAR
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
LEA
MOV
AND
ADD
CMP
MOV
MOV
CMOVB
MOV
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
MOV
MOV
XOR
MOV
MOV
MOV
TEST
JZ
XOR
XOR
MOV
CALL_NEAR
MOV
MOV
MOV
CALL_NEAR
MOV
PUSH
MOV
TEST
PUSH
MOV
PUSH
MOV
JZ
MOV
TEST
JNZ
MOV
MOV
MOV
MOV
CALL_NEAR
MOVZX
MOV
CMP
JZ
CALL_NEAR
MOV
MOV
MOV
CALL_NEAR
MOV
TEST
JZ
RET_NEAR
CALL_NEAR
PUSH
PUSH
PUSH
PUSH
SUB
CALL_NEAR
PUSH
PUSH
MOV
PUSH
MOV
MOV
SUB
MOV
SYSCALL
CMP
JNBE
TEST
JLE
MOVZX
CMP
JZ
CMP
JNZ
CMP
JZ
LEA
MOVSXD
CMP
JZ
SUB
CDQE
ADD
JMP
CMP
JNZ
MOV
CALL_NEAR
SUB
LEA
CMP
JZ
MOV
CMP
JNZ
MOV
CALL_NEAR
ADD
MOVSXD
CALL_NEAR
PUSH
PUSH
SUB
MOV
TEST
JNZ
MOV
MOV
MOV
TEST
JZ
MOV
AND
JZ
MOV
ADD
POP
POP
JMP
PUSH
PUSH
MOV
SUB
MOV
MOV
TEST
JS
XOR
TEST
JNZ
MOV
MOV
TEST
JZ
CALL_NEAR
PUSH
PUSH
PUSH
PUSH
MOV
MOV
PUSH
MOV
TEST
MOV
JZ
XOR
MOV
JMP
MOV
TEST
JZ
CMP
JNZ
CMP
JNZ
ADD
MOV
TEST
JZ
CMP
JNZ
CMP
JNZ
TEST
JZ
MOVSX
TEST
JNZ
POP
MOV
POP
POP
POP
POP
RET_NEAR
POP
MOV
POP
POP
POP
POP
RET_NEAR
MOV
TEST
JZ
MOV
ADD
MOV
POP
POP
JMP
MOV
MOV
TEST
JZ
MOV
AND
JZ
CALL_NEAR
MOV
CMP
JZ
CMPXCHG
JNZ
JMP
CMPXCHG
JZ
LEA
SUB
CALL_NEAR
JMP
MOV
MOV
CALL_NEAR
CMP
JNBE
MOV
PUSH
PUSH
ADD
PUSH
PUSH
PUSH
PUSH
MOV
AND
MOV
SUB
CMP
MOV
CMOVB
MOV
XOR
TEST
JZ
CMP
JNBE
CMP
JNBE
MOV
SHR
MOV
ADD
ADD
LEA
MOV
LEA
CMP
JZ
TEST
JZ
MOV
CALL_NEAR
PUSH
PUSH
PUSH
PUSH
PUSH
PUSH
SUB
CMP
JZ
MOV
CMP
JZ
OR
LEA
LEA
LEA
LEA
MOV
MOV
MOV
SUB
MOV
NOP
XOR
XCHG
TEST
JZ
MOV
PCMPEQD
MOVQ
LEA
PUNPCKLQDQ
LEA
PXOR
MOVDQA
PADDQ
MOVDQA
MOVDQA
NOP
MOVDQA
MOVDQA
PADDD
ADD
PADDD
PSLLD
PCMPGTD
MOVDQA
PUNPCKHDQ
PUNPCKLDQ
PADDQ
PSLLQ
PADDQ
PADDQ
PSLLQ
PADDQ
MOVDQA
PUNPCKLQDQ
PUNPCKHQDQ
MOVUPS
MOVUPS
MOVDQA
PUNPCKLQDQ
PUNPCKHQDQ
MOVUPS
MOVUPS
CMP
JNZ
LEA
MOV
MOV
LEA
CMP
MOV
MOV
MOV
MOV
JZ
MOV
OR
OR
MOV
LEA
MOV
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
MOVDQA
MOVDQA
PADDD
ADD
PADDD
PSLLD
PCMPGTD
MOVDQA
PUNPCKHDQ
PUNPCKLDQ
PADDQ
PSLLQ
PADDQ
PADDQ
PSLLQ
PADDQ
MOVDQA
PUNPCKLQDQ
PUNPCKHQDQ
MOVUPS
MOVUPS
MOVDQA
PUNPCKLQDQ
PUNPCKHQDQ
MOVUPS
MOVUPS
CMP
JNZ
LEA
MOV
MOV
LEA
CMP
MOV
MOV
MOV
MOV
JZ
MOV
OR
OR
MOV
LEA
MOV
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
MOV
MOV
JMP
OR
MOV
LEA
MOV
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
MOV
MOV
MOV
SHR
SHR
MOV
MOV
ADD
MOV
MOV
ADD
MOV
SHR
MOV
MOV
LEA
SHR
SHR
SHR
MOV
MOV
MOV
MOV
ADD
MOV
ADD
ADD
SUB
LEA
MOV
MOV
MOV
MOV
MOV
JMP
MOV
CMP
JZ
MOV
MOV
CMP
JBE
CMP
JNBE
CMP
JNBE
MOV
LEA
ADD
LEA
MOV
SHR
MOV
MOV
MOV
SHL
CMP
JNBE
TEST
JNZ
LEA
CMP
JZ
MOV
MOV
TEST
JNZ
LEA
CMP
JZ
MOV
MOV
TEST
JNZ
CMP
JZ
MOV
TEST
JNZ
MOV
LEA
MOV
AND
CMP
JNB
TEST
JNZ
MOV
CALL_NEAR
MOV
MOV
CALL_NEAR
PUSH
PUSH
PUSH
PUSH
PUSH
PUSH
MOV
SUB
TEST
MOV
JZ
CMP
MOV
JBE
MOV
LEA
LEA
MOV
MOV
NEG
AND
MOV
MOV
MOV
MOV
MOV
AND
TEST
LEA
SETNZ
CMP
JNZ
TEST
JNZ
LEA
CMP
JNB
CMP
JZ
MOV
MOV
MOV
NEG
TEST
LEA
LEA
MOV
JNZ
SUB
ADD
AND
TEST
MOV
JLE
MOV
MOV
MOV
MOV
CALL_NEAR
SUB
CALL_NEAR
JLE
MOV
ADD
SETB
TEST
JZ
MOV
MOV
MOV
ADD
MOV
POP
POP
RET_NEAR
MOV
CMP
CMOVZ
ADD
RET_NEAR
MOV
MOV
NOP
TEST
MOV
MOV
JZ
MOV
XOR
MOV
TEST
JNZ
CMP
JZ
MOV
JMP
MOV
ADD
CMP
MOV
JNZ
TEST
JZ
ADD
MOV
OR
MOV
JMP
MOV
TEST
JNZ
CMP
JBE
CMP
JNZ
TEST
JZ
MOV
SUB
ADD
MOV
MOV
MOV
AND
JZ
MOV
SUB
LEA
MOV
ADD
LEA
MOV
ADD
ADD
SUB
AND
LEA
TEST
JS
MOV
MOV
AND
JZ
MOV
SUB
LEA
MOV
ADD
LEA
MOV
ADD
ADD
SUB
AND
LEA
TEST
JS
MOV
MOV
MOV
CALL_NEAR
ADD
LEA
MOV
ADD
ADD
SUB
AND
LEA
TEST
JS
MOV
MOV
MOV
CALL_NEAR
TEST
MOV
MOV
JZ
MOV
TEST
JNZ
MOV
MOV
SUB
ADD
MOV
ADD
MOV
OR
TEST
MOV
MOV
JZ
CMP
JNB
MOV
MOV
AND
CMP
JNBE
SUB
XOR
CMP
SETNZ
LEA
OR
SHL
OR
OR
MOV
MOV
MOV
LEA
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
TEST
MOV
JZ
MOV
TEST
JZ
JMP
ADD
MOV
POP
POP
POP
POP
POP
POP
RET_NEAR
TEST
MOV
JZ
CMP
JZ
DEC
JNZ
DEC
JZ
LEA
SUB
CALL_NEAR
TEST
JZ
MOV
TEST
JNZ
TEST
MOV
JZ
CMP
JNZ
ADD
MOV
POP
POP
RET_NEAR
TEST
MOV
JZ
MOVSXD
MOV
MOV
CALL_NEAR
MOV
ADD
JMP
CMP
JB
CMP
JNBE
MOVUPS
MOVUPS
MOVUPS
MOVUPS
RET_NEAR
MOV
ADD
MOV
POP
POP
POP
RET_NEAR
MOV
MOV
MOV
MOV
MOV
RDTSC
SHL
MOV
MOV
OR
MOV
CALL_NEAR
PUSH
PUSH
MOV
PUSH
PUSH
PUSH
PUSH
SUB
CALL_NEAR
PXOR
PXOR
PXOR
PXOR
MOV
MOV
AND
CMP
JNBE
MOVDQU
PCMPEQB
PMOVMSKB
TEST
JZ
BSF
RET_NEAR
MOV
TEST
JZ
MOV
MOVZX
TEST
JZ
CMP
JNZ
MOV
MOVZX
ADD
LEA
TEST
JNZ
JMP
CMP
JNZ
LEA
MOV
MOV
CALL_NEAR
ADD
MOV
TEST
JZ
CMP
JNZ
LEA
MOV
MOV
CALL_NEAR
TEST
JZ
CMP
JZ
MOV
MOV
MOV
AND
AND
CMP
JNBE
CMP
JNBE
MOVLPD
MOVLPD
MOVHPD
MOVHPD
PXOR
PCMPEQB
PCMPEQB
PSUBB
PMOVMSKB
SUB
JNZ
SUB
JBE
BSF
SUB
JBE
MOVZX
MOVZX
SUB
RET_NEAR
TEST
JNZ
CMP
JNZ
LEA
JMP
ADD
MOV
POP
POP
POP
POP
POP
POP
RET_NEAR
MOV
TEST
CMOVZ
CMP
SETNZ
CMP
MOVZX
MOV
JZ
MOV
XOR
XOR
XOR
MOV
MOV
CALL_NEAR
PUSH
PUSH
MOV
PUSH
PUSH
MOV
PUSH
PUSH
MOV
MOV
SUB
MOV
MOV
MOV
CALL_NEAR
LEA
LEA
MOV
MOV
MOV
CALL_NEAR
MOV
PUSH
MOV
PUSH
OR
PUSH
MOV
PUSH
PUSH
IMUL
CMP
JBE
TEST
JZ
XOR
MOV
DIV
CMP
JNZ
MOV
TEST
JNZ
MOV
MOV
TEST
JZ
MOV
AND
JZ
MOV
CMP
JZ
CMPXCHG
JNZ
JMP
CMPXCHG
JZ
LEA
SUB
CALL_NEAR
JMP
MOV
MOV
AND
CMP
JZ
MOV
MOV
MOV
AND
ADD
SUB
CMP
CMOVB
CALL_NEAR
MOV
MOV
CALL_NEAR
MOV
SHR
CMP
JBE
MOV
SHR
CMP
JNBE
ADD
MOV
TEST
JNZ
ADD
MOV
JMP
TEST
JNZ
MOV
CALL_NEAR
MOV
MOV
MOV
SHR
SHR
MOV
MOV
ADD
MOV
MOV
ADD
MOV
SHR
MOV
MOV
LEA
SHR
SHR
SHR
MOV
MOV
MOV
MOV
ADD
MOV
ADD
ADD
SUB
LEA
MOV
MOV
MOV
MOV
MOV
JMP
MOV
ADD
ADD
LEA
MOV
LEA
CMP
JZ
CMP
JNBE
MOV
JMP
MOV
LEA
ADD
LEA
MOV
SHR
MOV
MOV
MOV
SHL
CMP
JNBE
TEST
JNZ
JMP
SUB
XOR
CMP
SETNZ
MOV
LEA
SHL
OR
OR
OR
MOV
ADD
MOV
MOV
MOV
TEST
JZ
JMP
TEST
MOV
JZ
MOV
TEST
JNZ
TEST
JNZ
JMP
CMP
JZ
DEC
JNZ
JMP
DEC
JZ
LEA
SUB
CALL_NEAR
TEST
JZ
MOV
TEST
JZ
MOV
TEST
JNZ
MOV
AND
TEST
JNZ
LEA
CMP
JNZ
CMP
CMOVNBE
SUB
MOV
SHR
CMP
JBE
CMP
JNBE
CMP
MOV
MOV
MOV
JBE
CMP
MOV
MOV
JBE
XOR
MOV
CALL_NEAR
JMP
VMOVD
MOV
VPBROADCASTB
CMP
JB
CMP
JNBE
VMOVDQU
VMOVDQU
VZEROUPPER
RET_NEAR
CMP
JNBE
CMP
JNBE
VMOVDQU
VMOVDQU
VMOVDQU
VMOVDQU
VZEROUPPER
RET_NEAR
LEA
VMOVDQU
AND
VMOVDQU
VMOVDQU
VMOVDQU
VMOVDQU
VMOVDQU
VMOVDQU
VMOVDQU
ADD
AND
CMP
JZ
VMOVDQA
VMOVDQA
VMOVDQA
VMOVDQA
ADD
CMP
JNZ
VZEROUPPER
RET_NEAR
VMOVDQA
VMOVDQA
VMOVDQA
VMOVDQA
ADD
CMP
JNZ
VZEROUPPER
RET_NEAR
JMP
POP
MOV
POP
POP
POP
POP
RET_NEAR
TEST
MOV
JZ
MOV
LEA
MOV
LEA
MOV
MOV
LEA
MOV
CALL_NEAR
CMP
JNB
CMP
JNB
CMP
JNBE
JB
MOVZX
MOV
RET_NEAR
MOV
MOV
ADD
MOV
MOVZX
TEST
CMOVNZ
AND
MOV
MOVZX
AND
OR
TEST
MOV
JZ
LEA
MOV
MOV
MOV
MOV
LEA
SHL
MOV
TEST
JZ
ADD
TEST
MOV
JZ
MOV
JMP
LEA
MOV
MOV
MOV
MOV
LEA
SHL
MOV
TEST
JZ
ADD
TEST
MOV
JZ
MOV
JMP
MOV
JMP
ADD
CMP
JZ
TEST
JNZ
MOV
JMP
MOV
LEA
TEST
MOV
MOV
JZ
MOV
XOR
CALL_NEAR
ADD
MOV
POP
POP
POP
POP
POP
POP
RET_NEAR
TEST
MOV
JZ
MOV
XOR
MOVZX
MOV
ADD
TEST
MOV
MOV
JNZ
JMP
MOV
CMP
JNZ
MOV
ADD
ADD
MOV
MOV
SHR
CMP
MOV
JNZ
MOV
SUB
ADD
ADD
MOV
MOV
ADD
MOV
TEST
MOV
JZ
CMP
JZ
CMP
JZ
ADD
ADD
CMP
JZ
CMP
MOV
JNZ
MOV
ADD
CMP
JB
MOV
TEST
JZ
CMP
JB
MOV
JMP
ADD
ADD
CMP
JZ
MOV
CMP
JNZ
MOV
ADD
ADD
MOV
MOV
SHR
CMP
MOV
JNZ
MOV
SUB
ADD
ADD
MOV
MOV
ADD
MOV
TEST
MOV
JZ
MOV
LEA
TEST
JZ
MOV
MOV
MOV
MOV
MOV
MOV
MOV
JMP
CMP
JBE
MOV
SUB
CMP
JBE
LEA
SAR
CMP
JBE
MOV
ADD
MOV
TEST
JZ
CMP
JBE
MOV
SUB
CMP
JBE
MOV
SUB
MOV
MOV
ADD
MOV
TEST
JZ
CMP
JBE
MOV
SUB
CMP
JBE
TEST
JZ
MOV
TEST
JZ
MOV
ADD
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
TEST
JZ
MOV
MOV
MOV
MOV
MOV
MOV
JMP
MOV
TEST
JZ
MOV
LEA
MOV
MOV
ADD
MOV
MOV
MOV
TEST
JZ
MOV
LEA
MOV
MOV
ADD
MOV
MOV
MOV
TEST
JZ
MOV
MOV
MOV
JMP
MOV
TEST
JZ
MOV
LEA
MOV
MOV
ADD
MOV
MOV
MOV
TEST
JZ
MOV
LEA
MOV
MOV
ADD
MOV
MOV
MOV
TEST
JZ
MOV
MOV
JMP
MOV
TEST
JZ
MOV
LEA
MOV
MOV
ADD
MOV
MOV
MOV
TEST
JZ
MOV
LEA
MOV
ADD
MOV
MOV
MOV
TEST
JZ
MOV
TEST
JZ
CMP
JNZ
CMP
JZ
CMP
JZ
MOV
CMP
JNZ
MOV
TEST
JZ
MOV
TEST
JZ
MOV
TEST
MOV
JZ
MOV
TEST
JZ
MOV
TEST
JZ
TEST
MOV
MOV
MOV
JNZ
TEST
JNZ
CMP
JZ
MOV
MOV
CALL_NEAR
MOV
CALL_NEAR
MOV
TEST
JZ
MOV
MOV
MOV
MOV
MOV
LEA
TEST
JNZ
MOV
LEA
ADD
MOV
SUB
LEA
MOV
MOV
LEA
MOV
MOV
RET_NEAR
MOV
TEST
JZ
MOV
MOV
ADD
MOV
LEA
MOV
MOV
RET_NEAR
MOV
LEA
OR
MOV
MOV
MOV
MOV
TEST
JZ
MOV
MOV
ADD
MOV
CALL_NEAR
LEA
MOV
CALL_NEAR
MOV
CMP
JZ
CMPXCHG
JNZ
JMP
CMPXCHG
JZ
LEA
SUB
CALL_NEAR
JMP
MOV
MOV
CALL_NEAR
MOV
SHR
LEA
MOV
MOV
LEA
TEST
JZ
MOV
MOV
CMP
JZ
CMPXCHG
CMP
MOV
JNZ
TEST
MOV
JZ
CMP
JZ
DEC
JNZ
DEC
JZ
LEA
SUB
CALL_NEAR
TEST
JZ
MOV
TEST
JNZ
TEST
MOV
JZ
CMP
JNZ
ADD
MOV
POP
POP
RET_NEAR
TEST
JZ
MOV
MOV
MOV
MOV
CALL_NEAR
MOV
MOV
MOV
TEST
JZ
MOV
XOR
MOV
CALL_NEAR
XOR
MOV
CALL_NEAR
PUSH
PUSH
MOV
MOV
MOV
SUB
TEST
JZ
MOV
CALL_NEAR
LEA
SHL
MOV
TEST
JNZ
JMP
MOV
TEST
JNZ
MOV
MOV
LEA
SHL
ADD
MOV
MOV
ADD
MOV
MOV
TEST
JZ
ADD
MOV
POP
POP
JMP
ADD
POP
POP
RET_NEAR
MOV
MOV
MOV
MOV
CALL_NEAR
XOR
RET_NEAR
MOV
CALL_NEAR
PUSH
MOV
MOV
MOV
PUSH
PUSH
PUSH
PUSH
PUSH
MOV
SUB
MOV
MOV
CALL_NEAR
PUSH
MOV
PUSH
PUSH
PUSH
PUSH
XOR
PUSH
SUB
TEST
MOV
SETNZ
AND
MOV
MOV
MOV
MOV
JZ
XOR
MOV
NOP
MOV
SHR
ADD
AND
ADD
MOV
SHL
NEG
TEST
JNZ
MOV
TEST
MOV
JZ
MOV
TEST
MOV
JZ
MOV
MOVZX
TEST
MOV
JZ
MOV
XOR
MOV
MOV
JMP
CMP
JNZ
MOV
MOV
MOV
ADD
CMP
MOV
LEA
JBE
MOV
MOV
MOV
JMP
ADD
ADD
CMP
JZ
CMP
JNZ
MOV
MOV
MOV
ADD
CMP
MOV
LEA
JBE
MOV
MOV
MOV
JMP
CMP
MOV
JNZ
CMP
JNZ
MOV
MOV
CALL_NEAR
MOV
ADD
ADD
AND
AND
LEA
ADD
LEA
MOV
SUB
CMP
JNB
CMP
MOV
JNZ
CMP
JNZ
MOV
ADD
ADD
CMP
JNZ
MOV
MOV
XOR
MOV
MOV
CALL_NEAR
MOV
MOV
XOR
MOV
MOV
CALL_NEAR
MOV
SYSCALL
CMP
JNB
RET_NEAR
NEG
MOV
OR
RET_NEAR
TEST
MOV
JNZ
MOV
CALL_NEAR
ADD
MOV
XOR
MOV
SHL
ADD
SUB
LEA
AND
MOV
XOR
JMP
TEST
JZ
XOR
MOV
NOP
BT
JNB
MOV
MOV
MOV
SHL
ADD
SHL
XOR
ADD
CMP
MOV
MOV
LEA
JZ
MOV
TEST
JZ
ADD
MOV
MOV
MOV
MOV
ADD
SHL
ADD
CMP
MOV
MOV
JNZ
CMP
JZ
MOV
MOV
MOV
MOV
MOV
SHL
CMP
LEA
MOV
MOV
MOV
MOV
MOV
MOV
LEA
JBE
LEA
MOV
LEA
ADD
NOP
MOV
ADD
CMP
LEA
JNZ
CMP
JZ
MOV
MOV
MOV
MOV
MOV
SHL
MOVSXD
MOV
MOV
MOV
MOV
SHL
LEA
MOV
CALL_NEAR
TEST
MOV
MOV
MOV
JZ
LEA
CMP
MOV
MOV
JNZ
MOV
MOV
MOV
CALL_NEAR
MOVZX
MOVZX
MOV
MOV
RET_NEAR
MOV
MOV
MOV
CALL_NEAR
MOV
MOV
MOV
CALL_NEAR
RET_NEAR
MOV
MOV
MOV
CALL_NEAR
MOV
MOV
MOV
SUB
SHL
MOV
MOV
SHL
MOV
JMP
LEA
XOR
NOP
ADD
MOV
ADD
CMP
JB
MOV
TEST
JZ
MOV
ADD
MOV
MOV
MOV
NOP
SUB
MOV
MOV
SHL
MOV
MOVSXD
NOP
SUB
TEST
JZ
ADD
MOV
ADD
CMP
JB
MOV
TEST
JZ
MOV
ADD
MOV
MOV
MOV
NOP
SUB
MOV
MOV
SHL
MOV
MOVSXD
NOP
SUB
TEST
JZ
MOV
SUB
ADD
ADD
ADD
TEST
JNZ
ADD
TEST
JNZ
SUB
TEST
JNZ
SUB
TEST
JZ
MOV
SUB
ADD
ADD
ADD
TEST
JNZ
ADD
TEST
JNZ
ADD
TEST
JNZ
SUB
TEST
JNZ
MOV
MOVZX
MOV
LEA
SUB
MOVSXD
SHL
CMP
JZ
SUB
MOV
MOV
SHL
MOV
MOVSXD
NOP
SUB
TEST
JZ
MOV
SUB
ADD
ADD
ADD
TEST
JNZ
ADD
TEST
JNZ
SUB
TEST
JNZ
MOV
MOVZX
MOV
LEA
SUB
MOVSXD
SHL
CMP
JZ
MOV
MOV
NOP
SUB
TEST
JZ
MOV
MOV
NEG
ADD
MOVSXD
SHL
NOP
MOV
ADD
ADD
MOV
SUB
JNZ
MOV
MOV
MOV
LEA
MOV
POP
POP
POP
POP
POP
POP
RET_NEAR
MOV
ADD
ADD
MOV
SUB
JNZ
MOV
MOV
MOV
LEA
MOV
POP
POP
POP
POP
POP
POP
RET_NEAR
MOV
MOV
CALL_NEAR
TEST
MOV
MOV
JZ
MOV
MOV
MOV
SHL
LEA
MOV
MOV
MUL
SHR
IMUL
MOV
CALL_NEAR
MOV
TEST
MOV
JZ
LEA
MOV
LEA
ADD
MOV
MOV
LEA
MOV
MOV
MOV
MOV
MOV
MOV
NEG
CMP
MOV
MOV
MOV
MOV
JZ
MOV
LEA
XOR
CALL_NEAR
CMP
JNB
VMOVQ
CMP
JNB
CMP
JNB
VMOVDQU
VMOVDQU
VZEROUPPER
RET_NEAR
CMP
JZ
ADD
MOV
ADD
ADD
MOV
MOV
CMP
MOV
MOV
MOV
MOV
MOV
LEA
JNZ
CMP
MOV
JNZ
MOV
LEA
XOR
CALL_NEAR
MOV
TEST
MOV
MOV
MOV
JZ
MOVZX
TEST
JNZ
MOV
LEA
POP
POP
POP
POP
POP
POP
RET_NEAR
MOV
CALL_NEAR
AND
PCMPEQB
PCMPEQB
PCMPEQB
PMOVMSKB
PMOVMSKB
PMOVMSKB
SHL
SHL
OR
SHL
OR
MOV
XOR
AND
SAR
TEST
JZ
BSF
RET_NEAR
MOVDQA
PMINUB
PMINUB
PMINUB
PCMPEQB
PMOVMSKB
TEST
JNZ
SUB
MOVDQA
PMINUB
PMINUB
PMINUB
PCMPEQB
PMOVMSKB
TEST
JNZ
JMP
PXOR
PCMPEQB
PCMPEQB
PCMPEQB
PCMPEQB
PMOVMSKB
PMOVMSKB
PMOVMSKB
PMOVMSKB
SHL
SHL
OR
OR
SHL
OR
BSF
ADD
SUB
RET_NEAR
LEA
ADD
MOV
AND
SUB
LEA
AND
CALL_NEAR
MOV
MOV
SUB
XOR
CMP
SETB
ADD
MOVZX
ADD
TEST
JNZ
LEA
CALL_NEAR
SUB
XOR
CMP
SETB
ADD
MOVZX
ADD
TEST
JNZ
LEA
CALL_NEAR
TEST
MOV
JZ
SUB
MOV
XOR
PUSH
MOV
MOV
MOV
MOV
CALL_NEAR
PUSH
PUSH
PUSH
PUSH
MOV
PUSH
PUSH
XOR
MOV
SUB
MOV
MOV
MOV
MOV
MOV
NOP
LEA
CALL_NEAR
PUSH
PUSH
SUB
MOV
TEST
JZ
MOVZX
MOV
TEST
JZ
CMP
JZ
MOV
CALL_NEAR
MOV
MOV
SUB
MOV
MOV
XOR
CLD
STOSQ
STOSQ
MOV
NOP
MOV
TEST
JZ
MOV
MOV
TEST
JZ
MOV
MOV
TEST
JZ
LEA
NOP
NOP
ADD
MOV
CMP
JZ
MOV
CMP
JZ
MOV
CMP
JZ
MOV
CMP
JNZ
INC
INC
INC
ADD
XOR
OR
CMOVZ
RET_NEAR
ADD
MOV
CMP
JZ
MOV
CMP
JZ
MOV
CMP
JZ
TEST
JZ
MOV
ADD
MOV
ADD
MOV
POP
POP
RET_NEAR
TEST
MOV
JZ
MOV
MOV
CALL_NEAR
JMP
MOVD
MOV
AND
PUNPCKLBW
CMP
PUNPCKLWD
PSHUFD
JNLE
MOVDQU
PXOR
MOVDQA
PCMPEQB
PCMPEQB
POR
PMOVMSKB
TEST
JZ
BSF
MOV
LEA
CMP
CMOVNZ
RET_NEAR
MOVDQU
MOVDQA
PCMPEQB
PCMPEQB
POR
PMOVMSKB
MOVDQU
MOVDQA
PCMPEQB
SHL
PCMPEQB
POR
PMOVMSKB
MOVDQU
PCMPEQB
SHL
PCMPEQB
OR
POR
PMOVMSKB
SHL
OR
TEST
JNZ
NOP
PXOR
AND
ADD
MOVDQA
MOVDQA
MOVDQA
PXOR
MOVDQA
PXOR
PXOR
PMINUB
PXOR
PMINUB
PMINUB
PMINUB
PMINUB
PMINUB
PMINUB
PCMPEQB
PMOVMSKB
TEST
JZ
MOVDQA
MOVDQA
PCMPEQB
PCMPEQB
POR
PCMPEQB
PCMPEQB
PCMPEQB
PMOVMSKB
PMOVMSKB
SHL
PMOVMSKB
PMOVMSKB
SHL
OR
OR
SHL
OR
BSF
MOV
LEA
CMP
CMOVNZ
BSF
MOV
LEA
CMP
CMOVNZ
RET_NEAR
TEST
JNZ
MOV
CALL_NEAR
PUSH
PUSH
MOV
SUB
CALL_NEAR
LEA
MOV
CALL_NEAR
TEST
JZ
ADD
MOV
MOV
POP
POP
MOV
JMP
MOVUPS
MOVUPS
MOVUPS
MOVUPS
MOVUPS
MOVUPS
MOVUPS
MOVUPS
RET_NEAR
MOV
MOV
CALL_NEAR
TEST
MOV
JNZ
MOV
TEST
JNZ
MOV
MOV
TEST
JNZ
CMP
JBE
CMP
LEA
JZ
JMP
MOV
JMP
MOV
LEA
MOV
MOV
TEST
JZ
CMP
JZ
CMP
JZ
MOV
TEST
JNZ
JMP
CMP
JNZ
MOV
MOV
MOV
CALL_NEAR
MOV
TEST
JZ
CMP
JNZ
MOV
MOV
MOV
CALL_NEAR
CMP
JZ
MOV
CALL_NEAR
MOV
JMP
MOV
LEA
LEA
ADD
MOV
CALL_NEAR
TEST
MOV
MOV
JZ
LEA
MOV
MOV
MOV
CALL_NEAR
CMP
MOV
MOV
JNB
MOV
XOR
CMP
MOV
SETNZ
ADD
TEST
JZ
LEA
SHR
NEG
AND
CMP
CMOVNBE
CMP
JNBE
MOV
CMP
MOV
JZ
CMP
MOV
JZ
CMP
MOV
JZ
CMP
MOV
JZ
CMP
MOV
JNZ
MOV
MOV
CMP
JZ
MOV
JMP
CMP
JZ
MOV
LEA
SUB
LEA
SUB
SHR
ADD
CMP
LEA
JBE
MOV
LEA
XOR
MOVD
PSHUFD
ADD
ADD
MOVAPS
CMP
JB
MOV
MOV
MOV
TEST
JZ
LEA
MOV
MOV
ADD
CALL_NEAR
MOV
JMP
MOV
MOV
MOV
JMP
MOV
ADD
MOV
CALL_NEAR
PUSH
PUSH
PUSH
PUSH
SUB
MOV
TEST
JNZ
TEST
JZ
MOV
LEA
TEST
JNZ
TEST
MOV
JZ
MOV
AND
MOV
XOR
CALL_NEAR
XOR
CALL_NEAR
PUSH
PUSH
MOV
PUSH
PUSH
PUSH
PUSH
MOV
MOV
SUB
MOV
MOV
AND
MOV
NEG
CMP
JNBE
TEST
JNZ
CMP
JBE
TEST
JNZ
CMP
JNBE
LEA
MOV
CMP
JBE
AND
CMP
JNB
MOV
LEA
TEST
JNZ
CMP
JZ
AND
SHR
LEA
MOV
MOV
LEA
CMP
JZ
TEST
MOV
SETNZ
NOP
TEST
SETNZ
AND
JZ
MOV
SHR
SUB
MOV
MOV
CMP
JZ
MOV
MOV
CMP
JZ
CMPXCHG
CMP
JZ
CMP
MOV
JNZ
CMPXCHG
CMP
JZ
CMP
MOV
JNZ
MOV
MOV
MOV
OR
MOV
AND
CMP
JZ
CMP
JZ
TEST
JZ
MOV
MOV
JMP
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
ADD
POP
POP
POP
POP
RET_NEAR
MOV
JMP
LEA
CALL_NEAR
CMPXCHG
CMP
MOV
JNZ
JMP
MOV
SHR
SUB
CMP
JNZ
MOV
LEA
TEST
JNZ
ADD
MOV
POP
POP
POP
POP
POP
POP
RET_NEAR
TEST
MOV
JZ
CMP
JZ
DEC
JNZ
JMP
PXOR
CMP
JNBE
CMP
JZ
ADD
ADD
LEA
MOVSXD
ADD
JMP
MOVDQU
MOVDQU
MOV
PXOR
PTEST
JNB
MOVDQU
MOVDQU
MOV
PXOR
PTEST
JNB
MOV
MOV
CMP
JNZ
CMP
JNZ
SHR
SHR
CMP
JNZ
SHR
SHR
CMP
JNZ
CMP
JNZ
SHR
SHR
CMP
JNZ
AND
AND
SUB
RET_NEAR
CMP
JNZ
AND
AND
SUB
RET_NEAR
AND
AND
SUB
RET_NEAR
TEST
JNZ
TEST
JZ
CMP
JZ
XOR
CMP
MOV
SETNZ
ADD
TEST
JZ
LEA
SHR
NEG
AND
CMP
CMOVNBE
CMP
JNBE
MOV
CMP
MOV
JZ
CMP
MOV
JZ
CMP
MOV
JZ
CMP
MOV
JZ
INC
INC
ADD
XOR
OR
CMOVZ
RET_NEAR
MOV
ADD
MOV
POP
POP
RET_NEAR
MOV
MOV
CALL_NEAR
CMP
JNZ
MOVZX
CMP
JNZ
MOV
TEST
JNZ
CMP
LEA
JNZ
MOV
CMP
JNZ
MOVZX
CMP
JNZ
MOVDQU
MOVDQU
MOV
PXOR
PTEST
JNB
MOV
MOV
CMP
JNZ
MOVZX
MOVZX
JMP
XOR
JMP
ADD
CMP
JNZ
MOV
ADD
MOV
CALL_NEAR
CMP
JZ
ADD
CMP
JNZ
MOV
ADD
MOV
CALL_NEAR
ADD
MOV
POP
POP
RET_NEAR
MOV
ADD
MOV
POP
POP
POP
POP
POP
POP
RET_NEAR
MOV
POP
POP
CMP
JZ
MOV
LEA
POP
POP
POP
POP
POP
POP
RET_NEAR
MOV
MOV
MOV
CALL_NEAR
TEST
MOV
CMOVZ
CMP
SETZ
MOVZX
MOV
CALL_NEAR
TEST
MOV
CMOVZ
CMP
SETNZ
MOVZX
MOV
CALL_NEAR
AND
AND
MOV
XOR
AND
AND
CMP
JZ
JNBE
MOV
XCHG
XCHG
LEA
SUB
LEA
MOVSXD
LEA
JMP
PXOR
MOVDQA
MOVDQA
PCMPEQB
PSLLDQ
PCMPEQB
PSUBB
PMOVMSKB
SHR
SHR
SUB
JNZ
MOVDQA
LEA
CMP
JB
TEST
JZ
LEA
LEA
TEST
JZ
XCHG
NOP
NOP
BSF
SUB
JBE
MOVZX
MOVZX
SUB
RET_NEAR
TEST
MOV
CMOVZ
CMP
SETZ
MOVZX
MOV
CALL_NEAR
MOV
TEST
JZ
MOV
MOVZX
TEST
JZ
CMP
JNZ
TEST
MOV
JZ
CMP
JNZ
MOV
MOV
MOV
TEST
CMOVZ
MOV
TEST
JZ
MOV
MOV
MOV
TEST
CMOVZ
MOV
TEST
JZ
MOV
NOP
MOV
CALL_NEAR
MOV
TEST
JZ
CMP
JZ
MOV
CALL_NEAR
TEST
MOV
JZ
MOV
XOR
XOR
LEA
XOR
XOR
MOV
CALL_NEAR
MOV
TEST
JZ
CALL_NEAR
MOV
MOV
TEST
JZ
MOV
TEST
JZ
XOR
CMP
LEA
JNZ
ADD
CMP
JNZ
ADD
POP
POP
POP
POP
RET_NEAR
MOV
ADD
CMP
JZ
ADD
CMP
JNZ
ADD
POP
POP
POP
POP
RET_NEAR
MOV
MOV
ADD
POP
POP
POP
POP
RET_NEAR
MOV
MOV
MOV
CALL_NEAR
TEST
JZ
PUSH
PUSH
SUB
MOV
TEST
JZ
MOV
MOV
MOV
CALL_NEAR
MOVD
MOV
AND
PUNPCKLBW
CMP
PUNPCKLWD
PSHUFD
JNBE
MOVDQU
PXOR
MOVDQA
PCMPEQB
PCMPEQB
PMOVMSKB
PMOVMSKB
TEST
JZ
LEA
XOR
AND
JZ
XOR
RET_NEAR
LEA
TEST
CMOVNZ
MOV
MOV
MOV
ADD
POP
POP
RET_NEAR
POP
POP
POP
JMP
MOV
MOV
MOV
MOV
MOV
MOV
MOV
LEA
ADD
MOV
MOV
LEA
MOV
MOV
MOV
RET_NEAR
TEST
JZ
XOR
XOR
MOV
CALL_NEAR
PUSH
PUSH
MOV
PUSH
MOV
MOV
MOV
CALL_NEAR
PUSH
PUSH
MOV
MOV
XOR
SUB
CMP
JZ
CMPXCHG
JNZ
JMP
CMPXCHG
JZ
LEA
SUB
CALL_NEAR
MOV
XOR
TEST
MOV
JZ
NOP
MOV
TEST
JZ
LEA
MOV
SHL
CMP
JNZ
MOV
MOV
MOV
TEST
JZ
MOV
JMP
LEA
MOV
JMP
MOV
ADD
CMP
JZ
DEC
JNZ
JMP
DEC
JZ
LEA
SUB
CALL_NEAR
ADD
MOV
POP
POP
RET_NEAR
TEST
JZ
MOV
MOV
MOV
XOR
ROL
MOV
MOV
XOR
POP
POP
POP
RET_NEAR
CMP
JNZ
TEST
JZ
MOV
MOV
MOV
CALL_NEAR
PUSH
MOV
PUSH
SUB
PUSH
PUSH
SAR
PUSH
XOR
TEST
MOV
MOV
MOV
JZ
NOP
MOV
MOV
MOV
CALL_NEAR
MOV
XOR
SUB
SAR
CALL_NEAR
SUB
MOV
TEST
JZ
CALL_NEAR
ADD
RET_NEAR
TEST
JZ
NOP
MOV
MOV
MOV
CALL_NEAR
PUSH
MOV
TEST
MOV
JZ
MOV
MOV
CALL_NEAR
TEST
JZ
MOV
TEST
JNZ
RET_NEAR
JMP
CMP
MOV
MOV
MOV
MOV
MOV
MOV
MOV
JZ
PUSH
LEA
MOV
CALL_NEAR
MOV
MOV
MOV
RET_NEAR
MOV
CMP
JNZ
POP
JMP
MOV
PUSH
SUB
SAR
MOV
MOV
SHR
ADD
SAR
JZ
MOV
TEST
JZ
POP
MOV
JMP
POP
RET_NEAR
ADD
CMP
JNZ
POP
POP
POP
POP
POP
RET_NEAR
MOV
MOV
MOV
CALL_NEAR
PUSH
MOV
MOV
MOV
CALL_NEAR
PUSH
MOV
SUB
MOV
MOV
CMP
JNZ
CMP
JNZ
LEA
CALL_NEAR
PUSH
PUSH
PUSH
PUSH
PUSH
PUSH
SUB
CMP
MOV
JZ
MOV
XADD
TEST
JZ
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
MOV
LEA
MOV
JMP
TEST
JZ
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
MOV
LEA
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
LEA
MOV
CALL_NEAR
PUSH
PUSH
PUSH
MOV
MOV
CALL_NEAR
CMP
JZ
SUB
MOV
MOV
CALL_NEAR
MOV
CMP
JNZ
JMP
LEA
SUB
MOV
CALL_NEAR
PUSH
PUSH
LEA
PUSH
PUSH
LEA
PUSH
PUSH
MOV
SUB
MOV
MOV
MOV
MOV
XOR
MOV
NOP
MOV
ADD
CMP
JNZ
MOV
LEA
LEA
MOV
NOP
MOV
ADD
CMP
JNZ
MOV
LEA
LEA
MOV
NOP
MOV
ADD
CMP
JNZ
MOV
ADD
CMP
JNZ
MOV
LEA
LEA
MOV
NOP
MOV
ADD
CMP
JNZ
MOV
LEA
LEA
MOV
NOP
MOV
ADD
CMP
JNZ
MOV
ADD
CMP
JNZ
MOV
LEA
LEA
MOV
NOP
MOV
ADD
CMP
JNZ
LEA
MOV
MOV
CALL_NEAR
MOV
ADD
CMP
JNZ
LEA
MOV
MOV
CALL_NEAR
MOV
RET_NEAR
MOVZX
LEA
MOV
XOR
XOR
MOV
CALL_NEAR
XOR
TEST
PUSH
SETNZ
PUSH
PUSH
MOV
MOV
MOV
MOV
MOV
ADD
MOV
CALL_NEAR
CMP
PUSH
JZ
MOV
MOV
CALL_NEAR
MOV
MOV
TEST
JNZ
CALL_NEAR
MOV
MOV
XOR
JMP
PUSH
MOV
MOV
CALL_NEAR
PUSH
MOV
PUSH
PUSH
PUSH
PUSH
MOV
PUSH
SUB
CMP
MOV
JZ
TEST
MOV
JNZ
TEST
JZ
MOV
JMP
TEST
JZ
MOV
CMP
JZ
TEST
JZ
TEST
MOV
JZ
CMP
JZ
CMP
JNZ
CMP
JZ
JMP
LEA
MOV
POP
POP
POP
POP
POP
POP
RET_NEAR
TEST
MOV
JZ
POP
RET_NEAR
MOV
POP
RET_NEAR
TEST
MOV
SETNZ
AND
TEST
MOV
MOV
MOV
MOV
MOV
JZ
LEA
MOV
LEA
XOR
MOV
MOV
AND
MOV
MOV
SUB
MOV
ADD
SHR
STOSQ
MOV
JMP
LEA
MOV
LEA
XOR
MOV
MOV
AND
MOV
MOV
SUB
MOV
ADD
SHR
STOSQ
STOSQ
MOV
MOV
MOV
AND
SUB
LEA
SHR
STOSQ
STOSQ
POP
POP
POP
RET_NEAR
MOV
LEA
MOV
CALL_NEAR
TEST
JZ
PUSH
PUSH
MOV
PUSH
PUSH
PUSH
PUSH
MOV
MOV
SUB
CALL_NEAR
MOV
TEST
JNZ
CMP
MOV
JZ
MOV
XADD
ADD
CDQE
MOV
SUB
RET_NEAR
MOV
ADD
MOV
JMP
CDQE
MOV
SUB
RET_NEAR
MOV
MOV
SUB
CMP
JNBE
MOV
TEST
JZ
ADD
MOV
LEA
MOV
TEST
JZ
ADD
JMP
MOV
LEA
MOV
TEST
JZ
MOV
MOV
TEST
JNZ
JMP
CMP
MOV
JZ
XOR
MOV
JMP
MOV
LEA
TEST
JZ
TEST
JNZ
MOV
LEA
CMP
MOV
JNZ
ADD
CMP
JBE
MOV
LEA
TEST
JZ
TEST
JNZ
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
LEA
MOV
CALL_NEAR
PUSH
PUSH
XOR
MOV
SUB
TEST
SETNZ
MOV
MOV
ADD
MOV
CALL_NEAR
POP
RET_NEAR
MOV
ADD
POP
POP
RET_NEAR
MOV
LEA
MOV
CALL_NEAR
MOV
LEA
LEA
XOR
MOV
MOV
MOV
MOV
ADD
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
ADD
MOV
MOV
MOV
MOV
CALL_NEAR
PUSH
PUSH
MOV
PUSH
PUSH
MOV
SUB
MOV
TEST
JZ
TEST
JZ
MOV
MOV
CALL_NEAR
LEA
MOV
MOV
MOV
MOV
MOV
MOV
MOV
XOR
NOP
MOVZX
MOV
ADD
CMP
JNZ
MOV
MOV
XOR
NOP
MOVZX
MOV
ADD
CMP
JNZ
JMP
MOVZX
MOV
ADD
CMP
JNZ
MOV
MOV
XOR
NOP
MOVZX
MOV
ADD
CMP
JNZ
JMP
MOVZX
MOV
ADD
CMP
JNZ
JMP
LEA
MOV
MOV
MOV
LEA
MOV
ADD
POP
POP
POP
POP
RET_NEAR
MOV
LEA
MOV
CALL_NEAR
MOV
MOV
LEA
MOV
MOV
ADD
MOV
CALL_NEAR
MOV
MOV
LEA
MOV
MOV
ADD
MOV
CALL_NEAR
MOV
MOV
ADD
MOV
CALL_NEAR
MOV
LEA
MOV
MOV
CALL_NEAR
MOV
LEA
LEA
XOR
XOR
MOV
MOV
MOV
ADD
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
ADD
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
CALL_NEAR
PUSH
PUSH
PUSH
PUSH
PUSH
PUSH
MOV
MOV
SUB
MOV
TEST
JZ
TEST
JZ
MOV
MOV
CALL_NEAR
LEA
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
XOR
NOP
MOVZX
MOV
ADD
CMP
JNZ
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
MOVZX
MOV
ADD
CMP
JNZ
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
MOV
LEA
MOV
CALL_NEAR
MOV
LEA
LEA
XOR
XOR
MOV
MOV
MOV
ADD
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
ADD
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
CALL_NEAR
PUSH
PUSH
PUSH
PUSH
PUSH
PUSH
MOV
MOV
SUB
MOV
TEST
JZ
TEST
JZ
MOV
MOV
CALL_NEAR
LEA
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
XOR
NOP
MOVZX
MOV
ADD
CMP
JNZ
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
MOVZX
MOV
ADD
CMP
JNZ
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
MOV
LEA
MOV
CALL_NEAR
MOV
MOV
LEA
MOV
MOV
ADD
MOV
CALL_NEAR
MOV
MOV
LEA
MOV
MOV
ADD
MOV
CALL_NEAR
MOV
LEA
LEA
MOV
MOV
MOV
MOV
MOV
ADD
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
CALL_NEAR
PUSH
PUSH
XOR
MOV
SUB
TEST
MOV
SETNZ
MOV
MOV
MOV
ADD
MOV
CALL_NEAR
MOV
RET_NEAR
XOR
MOV
MOV
CALL_NEAR
PUSH
PUSH
MOV
SUB
CMP
MOV
JZ
CMP
JZ
LEA
CALL_NEAR
CALL_NEAR
MOV
MOV
LEA
LEA
MOV
LEA
MOV
MOV
LEA
MOV
LEA
MOV
MOV
LEA
MOV
LEA
MOV
MOV
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
MOV
ADD
POP
POP
RET_NEAR
ADD
POP
POP
RET_NEAR
MOV
LEA
MOV
CALL_NEAR
MOV
MOV
LEA
MOV
MOV
ADD
MOV
CALL_NEAR
MOV
MOV
LEA
MOV
MOV
ADD
MOV
CALL_NEAR
LEA
MOV
CALL_NEAR
PUSH
PUSH
XOR
MOV
SUB
TEST
SETNZ
MOV
MOV
ADD
MOV
CALL_NEAR
MOV
CALL_NEAR
MOV
RET_NEAR
MOV
ADD
POP
POP
RET_NEAR
MOV
LEA
MOV
CALL_NEAR
LEA
MOV
CALL_NEAR
PUSH
PUSH
XOR
MOV
SUB
TEST
SETNZ
MOV
MOV
ADD
MOV
CALL_NEAR
MOV
MOV
ADD
MOV
POP
POP
JMP
PUSH
PUSH
PUSH
PUSH
MOV
XOR
SUB
MOV
CALL_NEAR
MOV
TEST
MOV
JZ
CMP
MOV
CMOVZ
MOV
MOV
TEST
JZ
MOV
LEA
MOV
MOV
TEST
JZ
MOV
MOV
MOV
TEST
JZ
MOV
LEA
MOV
MOV
TEST
JZ
MOV
LEA
MOV
MOV
TEST
JZ
MOV
LEA
MOV
MOV
TEST
JZ
MOV
LEA
MOV
MOV
TEST
JZ
MOV
LEA
MOV
MOV
TEST
JZ
MOV
LEA
MOV
MOV
TEST
JZ
MOV
LEA
MOV
MOV
TEST
JZ
MOV
LEA
MOV
MOV
TEST
JZ
MOV
LEA
MOV
MOV
TEST
JZ
MOV
LEA
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
CMP
MOV
CMOVZ
RET_NEAR
MOV
JMP
MOV
CALL_NEAR
CMP
JZ
CMP
JNBE
MOV
RET_NEAR
CMP
JNZ
MOV
XOR
NOP
MOV
CALL_NEAR
MOV
ADD
CMP
JZ
MOV
CALL_NEAR
MOV
JMP
XOR
NOP
MOV
CALL_NEAR
LEA
CMP
JNBE
CMP
JZ
TEST
MOV
JZ
RET_NEAR
MOV
ADD
CMP
JNZ
XOR
MOV
JMP
MOV
CALL_NEAR
PUSH
PUSH
PUSH
MOV
SUB
MOV
MOV
MOV
MOV
TEST
JZ
CMP
MOV
MOV
JNZ
TEST
JZ
CMP
JZ
MOV
CALL_NEAR
MOV
JMP
CMP
MOV
MOV
JNZ
TEST
JZ
CMP
JZ
MOV
CALL_NEAR
CMP
JZ
MOV
MOV
JMP
RET_NEAR
MOVZX
MOV
CALL_NEAR
MOVZX
TEST
MOV
CMOVS
RET_NEAR
ADD
POP
POP
POP
RET_NEAR
MOV
MOV
SHL
CMP
JBE
SHR
JMP
SHL
MOV
MOV
MOVZX
CALL_NEAR
CMP
JZ
JBE
CMP
JZ
CMP
JZ
JBE
CMP
JZ
MOV
LEA
JMP
PUSH
PUSH
MOV
PUSH
PUSH
XOR
PUSH
PUSH
MOV
SUB
CALL_NEAR
MOV
MOV
MOV
JMP
MOV
CALL_NEAR
CMP
MOV
JNZ
MOV
MOV
MOV
CALL_NEAR
MOV
MOV
CMP
JNZ
MOVZX
MOVZX
SUB
RET_NEAR
TEST
JNZ
ADD
MOV
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
MOV
ADD
CMP
JZ
MOV
MOV
SHL
CMP
JBE
SHR
JMP
CMP
JNZ
MOV
LEA
JMP
TEST
JNZ
ADD
MOV
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
LEA
CMP
JZ
ADD
MOV
CALL_NEAR
MOV
LEA
JMP
JBE
CMP
JZ
CMP
JZ
CMP
JZ
CMP
JNZ
MOV
LEA
JMP
MOV
LEA
JMP
CMP
JZ
XOR
RET_NEAR
MOV
LEA
JMP
MOV
MOV
CMP
JNZ
MOVZX
MOVZX
CMP
JNZ
AND
AND
SUB
RET_NEAR
MOV
LEA
JMP
MOV
LEA
JMP
MOV
MOV
MOVZX
CALL_NEAR
CMP
JZ
CMP
JNZ
MOV
LEA
JMP
MOV
LEA
JMP
MOV
LEA
JMP
XOR
RET_NEAR
ADD
MOV
POP
POP
POP
POP
JMP
MOV
LEA
MOV
CALL_NEAR
LEA
MOV
CALL_NEAR
PUSH
PUSH
XOR
MOV
SUB
TEST
SETNZ
MOV
MOV
ADD
MOV
CALL_NEAR
MOV
ADD
POP
POP
RET_NEAR
MOV
LEA
MOV
CALL_NEAR
MOV
LEA
LEA
XOR
MOV
MOV
MOV
MOV
ADD
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
ADD
MOV
MOV
MOV
MOV
CALL_NEAR
PUSH
PUSH
PUSH
PUSH
MOV
MOV
SUB
CMP
JZ
TEST
JZ
MOV
MOV
CALL_NEAR
MOV
LEA
MOV
MOV
MOV
MOV
MOV
MOV
MOV
XOR
NOP
MOVSX
MOV
ADD
CMP
JNZ
MOV
MOV
XOR
NOP
MOVSX
MOV
ADD
CMP
JNZ
JMP
MOVSX
MOV
ADD
CMP
JNZ
MOV
MOV
XOR
NOP
MOVSX
MOV
ADD
CMP
JNZ
JMP
MOVSX
MOV
ADD
CMP
JNZ
JMP
LEA
MOV
MOV
MOV
LEA
MOV
ADD
POP
POP
POP
POP
RET_NEAR
MOV
LEA
MOV
CALL_NEAR
MOV
MOV
LEA
MOV
MOV
ADD
MOV
CALL_NEAR
MOV
MOV
LEA
MOV
MOV
ADD
MOV
CALL_NEAR
MOV
MOV
ADD
MOV
CALL_NEAR
MOV
LEA
MOV
MOV
CALL_NEAR
MOV
LEA
LEA
XOR
XOR
MOV
MOV
MOV
ADD
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
ADD
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
CALL_NEAR
PUSH
PUSH
PUSH
PUSH
MOV
PUSH
PUSH
MOV
SUB
MOV
MOV
XOR
CMP
JZ
TEST
JZ
MOV
CALL_NEAR
MOV
LEA
MOV
LEA
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
XOR
NOP
MOVSX
MOV
ADD
CMP
JNZ
JMP
MOVSX
MOV
ADD
CMP
JNZ
JMP
MOV
XOR
JNZ
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
MOV
LEA
MOV
CALL_NEAR
MOV
LEA
XOR
XOR
MOV
MOV
MOV
MOV
ADD
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
ADD
MOV
MOV
MOV
LEA
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
CALL_NEAR
PUSH
PUSH
PUSH
PUSH
MOV
PUSH
PUSH
MOV
SUB
MOV
MOV
XOR
CMP
JZ
TEST
JZ
MOV
CALL_NEAR
MOV
LEA
MOV
LEA
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
XOR
NOP
MOVSX
MOV
ADD
CMP
JNZ
JMP
MOVSX
MOV
ADD
CMP
JNZ
JMP
MOV
XOR
JNZ
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
MOV
LEA
MOV
CALL_NEAR
MOV
MOV
LEA
MOV
MOV
ADD
MOV
CALL_NEAR
MOV
MOV
LEA
MOV
MOV
ADD
MOV
CALL_NEAR
MOV
LEA
LEA
MOV
MOV
MOV
MOV
MOV
ADD
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
CALL_NEAR
PUSH
PUSH
XOR
MOV
SUB
TEST
MOV
SETNZ
MOV
MOV
MOV
ADD
MOV
CALL_NEAR
MOV
RET_NEAR
XOR
MOV
MOV
CALL_NEAR
PUSH
MOV
SUB
CMP
MOV
JZ
CMP
JZ
LEA
CALL_NEAR
CALL_NEAR
MOV
MOV
LEA
LEA
MOV
LEA
MOV
MOV
LEA
MOV
LEA
MOV
MOV
LEA
MOV
LEA
MOV
MOV
MOV
LEA
MOV
LEA
MOV
LEA
MOV
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
LEA
MOV
ADD
POP
RET_NEAR
ADD
POP
POP
RET_NEAR
MOV
LEA
MOV
CALL_NEAR
MOV
MOV
LEA
MOV
MOV
ADD
MOV
CALL_NEAR
MOV
MOV
LEA
MOV
MOV
ADD
MOV
CALL_NEAR
LEA
MOV
CALL_NEAR
PUSH
PUSH
XOR
MOV
SUB
TEST
SETNZ
MOV
MOV
ADD
MOV
CALL_NEAR
MOV
CALL_NEAR
MOV
RET_NEAR
MOV
ADD
POP
POP
RET_NEAR
MOV
LEA
MOV
CALL_NEAR
MOV
MOV
LEA
MOV
MOV
ADD
MOV
CALL_NEAR
MOV
MOV
LEA
MOV
MOV
ADD
MOV
CALL_NEAR
LEA
LEA
MOV
MOV
MOV
MOV
MOV
MOV
MOV
CALL_NEAR
PUSH
PUSH
PUSH
PUSH
MOV
PUSH
PUSH
MOV
LEA
SUB
MOV
MOV
MOV
MOV
XOR
MOV
ADD
MOV
MOV
CALL_NEAR
PUSH
PUSH
MOV
PUSH
PUSH
MOV
SUB
MOV
TEST
JZ
TEST
JZ
MOV
MOV
CALL_NEAR
LEA
MOV
MOV
MOV
MOV
MOV
MOV
MOV
XOR
NOP
MOVZX
MOV
ADD
CMP
JNZ
MOV
MOV
XOR
NOP
MOVZX
MOV
ADD
CMP
JNZ
JMP
MOVZX
MOV
ADD
CMP
JNZ
MOV
MOV
XOR
NOP
MOVZX
MOV
ADD
CMP
JNZ
JMP
MOVZX
MOV
ADD
CMP
JNZ
JMP
LEA
MOV
MOV
MOV
LEA
MOV
ADD
POP
POP
POP
POP
RET_NEAR
MOV
TEST
JZ
ADD
MOV
MOV
MOV
CALL_NEAR
ADD
JMP
MOV
MOV
MOV
CALL_NEAR
MOV
LEA
MOV
MOV
MOV
ADD
MOV
CALL_NEAR
TEST
MOV
JZ
ADD
MOV
MOV
MOV
CALL_NEAR
ADD
JMP
MOV
MOV
MOV
CALL_NEAR
MOV
LEA
LEA
XOR
MOV
MOV
XOR
MOV
MOV
ADD
MOV
CALL_NEAR
PUSH
PUSH
PUSH
PUSH
PUSH
PUSH
MOV
MOV
SUB
MOV
TEST
JZ
TEST
JZ
MOV
MOV
CALL_NEAR
LEA
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
XOR
NOP
MOVZX
MOV
ADD
CMP
JNZ
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
MOVZX
MOV
ADD
CMP
JNZ
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
TEST
JZ
ADD
MOV
MOV
MOV
CALL_NEAR
ADD
JMP
MOV
MOV
MOV
CALL_NEAR
MOV
LEA
LEA
XOR
MOV
MOV
XOR
MOV
MOV
ADD
MOV
CALL_NEAR
PUSH
PUSH
PUSH
PUSH
PUSH
PUSH
MOV
MOV
SUB
MOV
TEST
JZ
TEST
JZ
MOV
MOV
CALL_NEAR
LEA
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
XOR
NOP
MOVZX
MOV
ADD
CMP
JNZ
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
MOVZX
MOV
ADD
CMP
JNZ
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
TEST
JZ
ADD
MOV
MOV
MOV
MOV
MOV
CALL_NEAR
MOV
MOV
ADD
MOV
MOV
MOV
CALL_NEAR
MOV
LEA
MOV
MOV
MOV
MOV
MOV
ADD
MOV
MOV
CALL_NEAR
MOV
LEA
MOV
MOV
MOV
MOV
MOV
ADD
MOV
MOV
CALL_NEAR
MOV
LEA
MOV
MOV
MOV
MOV
MOV
ADD
MOV
MOV
CALL_NEAR
MOV
LEA
LEA
MOV
MOV
CALL_NEAR
PUSH
PUSH
XOR
MOV
SUB
TEST
SETNZ
MOV
MOV
ADD
MOV
CALL_NEAR
MOV
CALL_NEAR
MOV
RET_NEAR
MOV
ADD
POP
POP
RET_NEAR
ADD
JMP
MOV
MOV
MOV
CALL_NEAR
MOV
LEA
LEA
MOV
MOV
XOR
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
ADD
MOV
CALL_NEAR
PUSH
PUSH
PUSH
PUSH
MOV
MOV
SUB
CMP
JZ
TEST
JZ
MOV
MOV
CALL_NEAR
MOV
LEA
MOV
MOV
MOV
MOV
MOV
MOV
MOV
XOR
NOP
MOVSX
MOV
ADD
CMP
JNZ
MOV
MOV
XOR
NOP
MOVSX
MOV
ADD
CMP
JNZ
JMP
MOVSX
MOV
ADD
CMP
JNZ
MOV
MOV
XOR
NOP
MOVSX
MOV
ADD
CMP
JNZ
JMP
MOVSX
MOV
ADD
CMP
JNZ
JMP
LEA
MOV
MOV
MOV
LEA
MOV
ADD
POP
POP
POP
POP
RET_NEAR
TEST
JZ
ADD
MOV
MOV
MOV
CALL_NEAR
ADD
JMP
MOV
MOV
MOV
CALL_NEAR
MOV
LEA
MOV
MOV
MOV
ADD
MOV
CALL_NEAR
TEST
MOV
JZ
ADD
MOV
MOV
MOV
CALL_NEAR
ADD
JMP
MOV
MOV
MOV
CALL_NEAR
MOV
LEA
LEA
MOV
MOV
XOR
XOR
MOV
ADD
MOV
MOV
MOV
CALL_NEAR
PUSH
PUSH
PUSH
PUSH
MOV
PUSH
PUSH
MOV
SUB
MOV
MOV
XOR
CMP
JZ
TEST
JZ
MOV
CALL_NEAR
MOV
LEA
MOV
LEA
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
XOR
NOP
MOVSX
MOV
ADD
CMP
JNZ
JMP
MOVSX
MOV
ADD
CMP
JNZ
JMP
MOV
XOR
JNZ
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
TEST
JZ
ADD
MOV
MOV
MOV
CALL_NEAR
ADD
JMP
MOV
MOV
MOV
CALL_NEAR
MOV
LEA
LEA
XOR
MOV
MOV
XOR
MOV
MOV
ADD
MOV
CALL_NEAR
PUSH
PUSH
PUSH
PUSH
MOV
PUSH
PUSH
MOV
SUB
MOV
MOV
XOR
CMP
JZ
TEST
JZ
MOV
CALL_NEAR
MOV
LEA
MOV
LEA
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
XOR
NOP
MOVSX
MOV
ADD
CMP
JNZ
JMP
MOVSX
MOV
ADD
CMP
JNZ
JMP
MOV
XOR
JNZ
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
TEST
JZ
ADD
MOV
MOV
MOV
MOV
CALL_NEAR
MOV
MOV
ADD
MOV
MOV
CALL_NEAR
MOV
LEA
MOV
MOV
MOV
MOV
MOV
ADD
MOV
MOV
CALL_NEAR
MOV
LEA
MOV
MOV
MOV
MOV
MOV
ADD
MOV
MOV
CALL_NEAR
MOV
LEA
MOV
MOV
MOV
MOV
MOV
ADD
MOV
MOV
CALL_NEAR
MOV
LEA
LEA
MOV
MOV
CALL_NEAR
PUSH
PUSH
XOR
MOV
SUB
TEST
SETNZ
MOV
MOV
ADD
MOV
CALL_NEAR
MOV
CALL_NEAR
MOV
RET_NEAR
MOV
ADD
POP
POP
RET_NEAR
ADD
JMP
MOV
MOV
MOV
CALL_NEAR
MOV
LEA
MOV
MOV
MOV
MOV
CALL_NEAR
SUB
RET_NEAR
MOV
MOV
MOV
MOV
CALL_NEAR
MOV
MOV
MOV
CALL_NEAR
MOV
MOV
MOV
CALL_NEAR
MOV
MOV
MOV
MOV
CALL_NEAR
  -- [           0]: {55240} thread 0 is created
MOV
MOV
MOV
MOV
CALL_NEAR
MOV
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
MOV
MOV
MOV
CALL_NEAR
MOV
MOV
MOV
MOV
CALL_NEAR
MOV
MOV
MOV
CALL_NEAR
MOV
MOV
MOV
CALL_NEAR
LEA
MOV
MOV
MOV
CALL_NEAR
MOV
MOV
MOV
CALL_NEAR
MOV
MOV
MOV
CALL_NEAR
LEA
MOV
MOV
MOV
CALL_NEAR
LEA
MOV
MOV
XOR
JNZ
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
MOV
LEA
MOV
MOV
MOV
ADD
RET_NEAR
MOV
MOV
MOV
MOV
CMP
JZ
CALL_NEAR
CMP
JZ
ADD
POP
POP
POP
RET_NEAR
ADD
JMP
POP
POP
POP
RET_NEAR
MOV
LEA
MOV
MOV
MOV
MOV
MOV
LEA
MOV
MOV
MOV
MOV
MOV
MOV
MOV
CALL_NEAR
RET_NEAR
MOV
LEA
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
CALL_NEAR
MOV
MOV
MOV
MOV
LEA
CALL_NEAR
MOV
LEA
LEA
MOV
MOV
MOV
MOV
ADD
MOV
MOV
MOV
MOV
MOV
MOV
NOP
MOV
MOV
ADD
CMP
JNZ
MOV
MOV
ADD
JMP
MOV
MOV
ADD
CMP
JNZ
MOV
MOV
ADD
JMP
MOV
LEA
LEA
MOV
MOV
MOV
MOV
LEA
MOV
MOV
MOV
MOV
LEA
MOV
CALL_NEAR
PUSH
PUSH
MOV
MOV
SUB
CALL_NEAR
PUSH
PUSH
MOV
SUB
MOV
MOV
MOV
MOV
MOV
MOV
XOR
CALL_NEAR
LEA
MOV
CALL_NEAR
PUSH
MOV
SUB
CMP
MOV
JZ
ADD
MOV
MOV
XADD
CMP
JZ
MOV
MOV
ADD
POP
RET_NEAR
MOV
ADD
MOV
LEA
CMP
MOV
JNZ
MOV
MOV
MOV
CALL_NEAR
MOV
MOV
ADD
POP
RET_NEAR
MOV
CALL_NEAR
CMP
PUSH
MOV
JZ
MOV
XADD
CMP
JZ
POP
RET_NEAR
MOV
LEA
CMP
MOV
JNZ
MOV
CALL_NEAR
POP
RET_NEAR
MOV
XOR
JNZ
ADD
POP
POP
RET_NEAR
LEA
MOV
CALL_NEAR
PUSH
PUSH
MOV
MOV
MOV
SUB
CALL_NEAR
PUSH
MOV
MOV
CALL_NEAR
MOV
MOV
XOR
CMP
JNB
MOV
MOV
TEST
JZ
MOV
MOV
XOR
CALL_NEAR
PUSH
PUSH
MOV
PUSH
PUSH
MOV
SUB
MOV
MOV
XOR
MOV
ADD
MOV
MOV
MOV
MOV
MOV
MOV
MOV
CMP
JZ
XOR
MOV
XOR
JNZ
ADD
POP
POP
POP
POP
RET_NEAR
MOV
MOV
MOV
MOV
MOV
MOV
PUSH
MOV
PUSH
MOV
MOV
CALL_NEAR
PUSH
PUSH
PUSH
PUSH
MOV
PUSH
PUSH
SUB
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
XOR
TEST
JZ
MOV
MOV
CMP
MOV
MOV
JZ
MOV
MOV
CMP
JZ
MOV
MOV
CMP
JZ
CMP
JZ
MOV
CALL_NEAR
JMP
MOV
XOR
PXOR
OR
AND
CMP
JNLE
MOVDQU
MOVDQU
PCMPEQB
PMINUB
PXOR
PCMPEQB
PMOVMSKB
TEST
JZ
BSF
MOVZX
MOVZX
SUB
RET_NEAR
TEST
JZ
MOV
MOV
CMP
JNZ
NOP
CMP
MOV
MOV
MOV
JS
MOV
XOR
MOV
ADD
CMP
SETZ
LEA
MOV
MOV
XOR
MOVZX
JNZ
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
MOV
POP
POP
TEST
JZ
MOV
MOV
AND
CMP
JZ
MOV
MOV
AND
AND
CMP
JZ
MOV
XOR
JNZ
ADD
POP
POP
POP
POP
RET_NEAR
TEST
SETNZ
POP
RET_NEAR
TEST
JZ
MOV
CALL_NEAR
PUSH
MOV
MOV
CALL_NEAR
MOV
CMP
MOV
JNB
MOV
TEST
JZ
MOV
MOV
XOR
CALL_NEAR
TEST
JZ
POP
RET_NEAR
MOV
MOV
CALL_NEAR
PUSH
MOV
MOV
CALL_NEAR
MOV
MOV
XOR
CMP
JNB
MOV
MOV
TEST
JZ
MOV
MOV
XOR
CALL_NEAR
PUSH
PUSH
MOV
PUSH
PUSH
PUSH
PUSH
MOV
SUB
MOV
MOV
MOV
MOV
CMP
JZ
MOVZX
MOV
CMP
JZ
MOV
MOV
MOV
MOV
MOV
CALL_NEAR
TEST
MOV
MOV
JS
ADD
XOR
CMP
SETZ
LEA
MOV
ADD
XOR
POP
POP
POP
POP
POP
POP
RET_NEAR
TEST
SETNZ
POP
RET_NEAR
TEST
JZ
MOV
CALL_NEAR
PUSH
MOV
MOV
CALL_NEAR
MOV
CMP
MOV
JNB
MOV
TEST
JZ
MOV
MOV
XOR
CALL_NEAR
TEST
JZ
POP
RET_NEAR
MOV
MOV
CALL_NEAR
PUSH
MOV
MOV
CALL_NEAR
MOV
MOV
XOR
CMP
JNB
MOV
MOV
TEST
JZ
MOV
MOV
XOR
CALL_NEAR
TEST
SETNZ
POP
RET_NEAR
TEST
JZ
MOV
CALL_NEAR
PUSH
MOV
MOV
CALL_NEAR
MOV
CMP
MOV
JNB
MOV
TEST
JZ
MOV
MOV
XOR
CALL_NEAR
TEST
JZ
POP
RET_NEAR
MOV
ADD
POP
POP
RET_NEAR
XOR
TEST
MOV
SETZ
MOV
MOV
MOV
MOV
MOV
ADD
POP
POP
RET_NEAR
MOV
LEA
CALL_NEAR
MOV
LEA
LEA
MOV
MOV
MOV
MOV
LEA
ADD
MOV
MOV
MOV
MOV
MOV
MOV
CALL_NEAR
MOV
LEA
CALL_NEAR
LEA
LEA
LEA
MOV
MOV
MOV
LEA
MOV
MOV
MOV
MOV
MOV
MOV
CALL_NEAR
MOV
LEA
CALL_NEAR
LEA
LEA
LEA
MOV
MOV
MOV
LEA
MOV
MOV
MOV
MOV
MOV
MOV
CALL_NEAR
MOV
MOV
LEA
OR
MOV
MOV
MOV
MOV
MOV
MOV
MOV
LEA
MOV
MOV
MOV
CALL_NEAR
MOV
LEA
MOV
MOV
MOV
MOV
MOV
LEA
MOV
MOV
MOV
MOV
MOV
MOV
MOV
CALL_NEAR
MOV
LEA
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
MOV
CALL_NEAR
MOV
MOV
MOV
MOV
LEA
CALL_NEAR
MOV
LEA
LEA
MOV
MOV
MOV
MOV
LEA
MOV
MOV
MOV
MOV
LEA
MOV
CALL_NEAR
PUSH
PUSH
MOV
MOV
SUB
CALL_NEAR
LEA
MOV
CALL_NEAR
PUSH
PUSH
MOV
MOV
MOV
SUB
CALL_NEAR
PUSH
MOV
MOV
CALL_NEAR
MOV
MOV
XOR
CMP
JNB
MOV
MOV
TEST
JZ
MOV
MOV
XOR
CALL_NEAR
TEST
SETNZ
POP
RET_NEAR
TEST
JZ
MOV
CALL_NEAR
PUSH
MOV
MOV
CALL_NEAR
MOV
CMP
MOV
JNB
MOV
TEST
JZ
MOV
MOV
XOR
CALL_NEAR
TEST
JZ
POP
RET_NEAR
MOV
MOV
CALL_NEAR
PUSH
MOV
MOV
CALL_NEAR
MOV
MOV
XOR
CMP
JNB
MOV
MOV
TEST
JZ
MOV
MOV
XOR
CALL_NEAR
TEST
SETNZ
POP
RET_NEAR
TEST
JZ
MOV
CALL_NEAR
PUSH
MOV
MOV
CALL_NEAR
MOV
CMP
MOV
JNB
MOV
TEST
JZ
MOV
MOV
XOR
CALL_NEAR
TEST
JZ
POP
RET_NEAR
MOV
MOV
CALL_NEAR
PUSH
MOV
MOV
CALL_NEAR
MOV
MOV
XOR
CMP
JNB
MOV
MOV
TEST
JZ
MOV
MOV
XOR
CALL_NEAR
TEST
SETNZ
POP
RET_NEAR
TEST
JZ
MOV
CALL_NEAR
PUSH
MOV
MOV
CALL_NEAR
MOV
CMP
MOV
JNB
MOV
TEST
JZ
MOV
MOV
XOR
CALL_NEAR
TEST
JZ
POP
RET_NEAR
MOV
ADD
POP
POP
RET_NEAR
XOR
TEST
MOV
SETZ
MOV
MOV
MOV
MOV
MOV
ADD
POP
POP
RET_NEAR
MOV
LEA
CALL_NEAR
MOV
LEA
LEA
MOV
MOV
MOV
MOV
LEA
ADD
MOV
MOV
MOV
MOV
MOV
MOV
CALL_NEAR
MOV
LEA
CALL_NEAR
LEA
LEA
LEA
MOV
MOV
MOV
LEA
MOV
MOV
MOV
MOV
MOV
MOV
CALL_NEAR
MOV
LEA
CALL_NEAR
LEA
LEA
LEA
MOV
MOV
MOV
LEA
MOV
MOV
MOV
MOV
MOV
MOV
CALL_NEAR
OR
CMP
MOV
MOV
JZ
ADD
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
ADD
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
LEA
LEA
MOV
MOV
CALL_NEAR
MOV
NOP
CMP
JZ
MOV
ADD
SHL
MOV
LEA
MOV
ADD
CMP
JZ
DEC
JNZ
NOP
LEAVE
RET_NEAR
POP
RET_NEAR
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
RET_NEAR
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
RET_NEAR
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
RET_NEAR
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
JNZ
MOV
RET_NEAR
LEA
LEA
LEA
SUB
CALL_NEAR
LEA
LEA
LEA
ADD
JMP
ADD
CMP
JNZ
POP
POP
POP
POP
POP
RET_NEAR
SUB
MOV
MOV
MOV
MOV
MOV
MOV
MOV
CALL_NEAR
MOV
SHR
CMP
JBE
MOV
SHR
CMP
JNBE
ADD
MOV
JMP
OR
LEA
LEA
LEA
LEA
MOV
MOV
MOV
SUB
MOV
NOP
XOR
XCHG
TEST
JZ
MOV
MOV
JMP
CMP
LEA
JZ
MOV
JMP
XOR
XCHG
TEST
JZ
MOV
MOV
JMP
MOV
MOV
MOV
AND
LEA
MOV
AND
TEST
JNZ
MOV
SUB
ADD
MOV
MOV
CMP
JNZ
CMP
JNZ
CMP
JZ
TEST
JZ
AND
JMP
MOV
CMP
MOV
MOV
JBE
MOV
MOV
MOV
MOV
MOV
OR
TEST
MOV
MOV
MOV
JZ
MOV
MOV
MOV
AND
LEA
MOV
AND
TEST
JNZ
MOV
MOV
MOV
OR
TEST
MOV
MOV
MOV
JZ
MOV
MOV
MOV
AND
LEA
MOV
AND
TEST
JNZ
MOV
SUB
ADD
MOV
MOV
CMP
JNZ
MOV
MOV
CMP
LEA
JZ
MOV
JMP
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
AND
CMP
JNBE
CMP
JZ
CMP
MOV
MOV
JZ
CMP
MOV
MOV
JZ
CMP
JBE
MOV
SHR
CMP
JNBE
MOV
SHR
LEA
CDQE
LEA
MOV
LEA
MOV
MOV
SAR
SHL
CDQE
OR
SUB
MOV
MOV
MOV
MOV
JZ
MOV
CMP
JZ
MOV
MOV
CMP
JBE
TEST
MOV
JZ
MOV
MOV
MOV
ADD
RET_NEAR
PUSH
PUSH
PUSH
PUSH
PUSH
PUSH
SUB
MOV
CMP
JZ
CMP
JZ
MOV
LEA
ADD
MOV
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
MOV
MOV
CALL_NEAR
CMP
JBE
PUSH
PUSH
MOV
PUSH
PUSH
MOV
PUSH
PUSH
MOV
SUB
MOV
MOV
JMP
MOV
CPUID
CMP
MOV
MOV
MOV
JNZ
MOVZX
XOR
JMP
LEA
LEA
MOV
CALL_NEAR
TEST
JS
LEA
PUSH
PUSH
PUSH
PUSH
MOV
MOV
MOV
SAR
IMUL
SUB
SUB
TEST
LEA
JZ
CMP
SETZ
CMP
SETZ
AND
MOVZX
CMP
JZ
CMP
JZ
CMP
JNZ
CMP
JNZ
MOV
XOR
MOV
NOP
LEA
SHR
CMP
LEA
JZ
NOP
JNB
CMP
MOV
JBE
ADD
SHR
CMP
LEA
JNZ
MOVZX
CMP
MOV
JZ
CMP
JZ
JNB
CMP
MOV
JBE
ADD
SHR
CMP
LEA
JNZ
SHR
TEST
JNZ
XOR
ADD
POP
POP
POP
POP
RET_NEAR
MOVZX
CMP
JZ
CMP
JZ
CMP
JNZ
LEA
CMP
JB
JMP
LEA
SHR
CMP
LEA
JZ
NOP
JNB
CMP
MOV
JBE
TEST
JNZ
LEA
LEA
MOV
MOV
CALL_NEAR
XOR
MOV
CPUID
MOV
AND
JZ
SHR
AND
CMP
SETZ
CMP
SETZ
CMP
SETZ
TEST
JZ
TEST
JNZ
LEA
SUB
JZ
CMP
JZ
CMP
JNZ
MOV
MOV
ADD
SHR
AND
SHR
ADD
ADD
IMUL
MOV
AND
ADD
IMUL
IMUL
JMP
ADD
POP
POP
POP
POP
RET_NEAR
TEST
JNZ
LEA
LEA
MOV
MOV
CALL_NEAR
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
MOV
MOV
MOV
CALL_NEAR
TEST
SETZ
CMP
SETZ
TEST
JZ
TEST
JNZ
CMP
MOV
SETZ
XOR
NOP
CMP
JNZ
CMP
MOV
SETZ
XOR
NOP
CMP
JNZ
TEST
JNZ
CMP
JNZ
CMP
JNZ
CMP
JZ
CMP
JNZ
CMP
JNZ
CMP
JZ
ADD
MOV
MOV
CPUID
ADD
MOV
MOV
CPUID
MOV
AND
JZ
SHR
AND
CMP
SETZ
CMP
SETZ
TEST
JZ
TEST
JNZ
CMP
SETZ
TEST
JZ
TEST
JZ
LEA
SUB
JZ
CMP
JNZ
TEST
JNZ
CMP
JNZ
MOV
MOV
MOV
CALL_NEAR
TEST
MOV
JLE
XOR
MOV
TEST
JZ
MOV
CMP
JLE
TEST
MOV
JZ
MOV
OR
XOR
XOR
MOV
MOV
LEA
MOV
CPUID
XOR
XOR
MOV
MOV
LEA
MOV
CPUID
TEST
JZ
MOV
SHR
AND
CMP
JZ
CMP
JNZ
MOV
JMP
LEA
MOV
CPUID
TEST
JZ
SHR
AND
AND
MOV
JMP
TEST
JZ
MOV
JMP
TEST
JZ
SHR
SHR
AND
AND
MOV
MOV
AND
TEST
JZ
MOV
JMP
CMP
JLE
TEST
MOV
SETNLE
XOR
CMP
SETZ
MOV
AND
TEST
JLE
MOVZX
MOV
LEA
OR
JMP
TEST
JZ
MOV
MOV
LEA
CPUID
MOVZX
AND
TEST
JZ
TEST
JZ
CMP
JNZ
TEST
JZ
BSR
OR
ADD
LEA
SHL
AND
NOT
AND
JMP
MOV
TEST
JZ
MOV
MOV
LEA
CPUID
CMP
JZ
MOV
TEST
JZ
MOV
MOV
LEA
CPUID
TEST
JZ
CMP
JZ
BSR
OR
ADD
SUB
SHL
NOT
AND
AND
JMP
CMP
SBB
TEST
JLE
ADD
CMP
JNZ
TEST
MOV
MOV
JZ
TEST
JLE
TEST
JZ
MOV
CQO
IDIV
MOV
TEST
JNZ
TEST
JLE
MOV
MOV
XOR
SAR
MOV
MOV
MOV
SAR
MOV
TEST
JLE
MOV
MOV
XOR
SAR
MOV
MOV
MOV
SAR
MOV
JMP
LEA
ADD
MOV
ADD
POP
POP
POP
POP
POP
POP
RET_NEAR
XOR
XOR
CALL_NEAR
TEST
MOV
JZ
LEA
SHL
ADD
CMP
JZ
TEST
JZ
CMP
JZ
TEST
JZ
MOV
LEA
MOV
SHL
MOV
MOV
MOV
RET_NEAR
TEST
MOV
JNZ
MOV
JMP
LEA
MOV
SHL
MOV
MOV
MOV
RET_NEAR
LEA
CALL_NEAR
XOR
JMP
MOV
MOV
XOR
ROL
MOV
MOV
MOV
MOV
MOV
LEA
XOR
ROL
MOV
MOV
NOP
XOR
ROL
MOV
JMP
TEST
PUSH
MOV
JZ
LEA
XOR
XOR
CALL_NEAR
MOV
XOR
POP
RET_NEAR
TEST
JNZ
MOV
MOV
MOV
MOV
LEA
MOV
MOV
MOV
MOV
MOV
CALL_NEAR
PUSH
MOV
SUB
MOV
MOV
XOR
MOV
LEA
MOV
MOV
  -- [      141330]: {55240} thread 0 is killed :   -- num_ins : (mem_rd, mem_wr, 2nd_mem_rd, spin, lock, trylock, all)=(       1562,       1433,        0,        0,        0,        0,       6530)
  -- {55240} total number of unsimulated (ins, rd, wr, rd_2nd): (4128, 1300, 943, 0)
  -- {55240} (cond_broadcast, cond_signal, cond_wait, barrier) = (0, 0, 0, 0)
  -- event became empty at cycle = 800000
  -- th[  0] fetched 6530 instrs
  -- th[  1] fetched 0 instrs
  -- th[  2] fetched 0 instrs
  -- th[  3] fetched 0 instrs
  -- th[  4] fetched 0 instrs
  -- th[  5] fetched 0 instrs
  -- th[  6] fetched 0 instrs
  -- th[  7] fetched 0 instrs
  -- th[  8] fetched 0 instrs
  -- th[  9] fetched 0 instrs
  -- th[ 10] fetched 0 instrs
  -- th[ 11] fetched 0 instrs
  -- th[ 12] fetched 0 instrs
  -- th[ 13] fetched 0 instrs
  -- th[ 14] fetched 0 instrs
  -- th[ 15] fetched 0 instrs
  -- th[ 16] fetched 0 instrs
  -- th[ 17] fetched 0 instrs
  -- th[ 18] fetched 0 instrs
  -- th[ 19] fetched 0 instrs
  -- th[ 20] fetched 0 instrs
  -- th[ 21] fetched 0 instrs
  -- th[ 22] fetched 0 instrs
  -- th[ 23] fetched 0 instrs
  -- total number of fetched instructions : 6530 (IPC =   0.081)
  -- OOO [000] : fetched 0000006530 instrs, branch (miss, access)=( 00000229, 0000001379)= 016.61%, nacks= 1050, x87_ops= 0, call_ops= 183, latest_ip= 0x400f00, tot_mem_wr_time= 1811300, tot_mem_rd_time= 1295920, tot_dep_dist= 74066
  -- L2$ [000] : RD (miss, access)=( 0000000300, 0000000323)= 092.88%
  -- L2$ [000] : WR (miss, access)=( 0000000995, 0000001092)= 091.12%
  -- L2$ [000] : (ev_coherency, ev_capacity, coherency_access, up_req, bypass, nack)=( 0000000000, 0000000000, 0000000000, 0000000017, 0000001035, 0000001035)
  -- L2$ [000] : EV_from_L1 (miss, access)=( 0000000000, 0000000010)= 0.00%,  L2$ (i,e,s,m,tr) ratio=(0984, 0011, 0000, 0004, 0000), num_dirty_lines (pid:#) = 0 : 78 , 
  -- Dir [000] : (i->tr, e->tr, s->tr, m->tr, m->i, tr->i, tr->e, tr->s, tr->m) = (68, 1, 0, 0, 0, 0, 63, 0, 6)
  -- Dir [000] : (nack, bypass, evict, invalidate, from_mc, dir_acc, dir_$_miss, dir_$_retry, dir_$_evict) = (43, 0, 0, 0, 68, 181, 0, 0, 0), 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  -- Dir [001] : (i->tr, e->tr, s->tr, m->tr, m->i, tr->i, tr->e, tr->s, tr->m) = (63, 6, 0, 0, 0, 0, 60, 0, 9)
  -- Dir [001] : (nack, bypass, evict, invalidate, from_mc, dir_acc, dir_$_miss, dir_$_retry, dir_$_evict) = (45, 0, 0, 0, 63, 183, 0, 0, 0), 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  -- Dir [002] : (i->tr, e->tr, s->tr, m->tr, m->i, tr->i, tr->e, tr->s, tr->m) = (88, 3, 0, 0, 0, 0, 50, 0, 41)
  -- Dir [002] : (nack, bypass, evict, invalidate, from_mc, dir_acc, dir_$_miss, dir_$_retry, dir_$_evict) = (733, 0, 0, 0, 88, 915, 0, 0, 0), 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  -- Dir [003] : (i->tr, e->tr, s->tr, m->tr, m->i, tr->i, tr->e, tr->s, tr->m) = (41, 7, 0, 0, 0, 0, 26, 0, 22)
  -- Dir [003] : (nack, bypass, evict, invalidate, from_mc, dir_acc, dir_$_miss, dir_$_retry, dir_$_evict) = (214, 0, 0, 0, 41, 310, 0, 0, 0), 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  -- MC  [000] : (rd, wr, act, pre) = (000000068, 000000000, 000000030, 000000030), # of WR->RD switch = 0, #_refresh = 0, 9 pages acc, AB (rd, wr, act) = (000000000, 000000000, 000000000), avg_tick_in_mc= 830
               : local pred (miss,hit)=( 0, 0), global pred (miss,hit)=( 0, 0)
  -- MC  [001] : (rd, wr, act, pre) = (000000063, 000000000, 000000040, 000000040), # of WR->RD switch = 0, #_refresh = 0, 9 pages acc, AB (rd, wr, act) = (000000000, 000000000, 000000000), avg_tick_in_mc= 750
               : local pred (miss,hit)=( 0, 0), global pred (miss,hit)=( 0, 0)
  -- MC  [002] : (rd, wr, act, pre) = (000000088, 000000000, 000000050, 000000050), # of WR->RD switch = 0, #_refresh = 0, 12 pages acc, AB (rd, wr, act) = (000000000, 000000000, 000000000), avg_tick_in_mc= 822
               : local pred (miss,hit)=( 0, 0), global pred (miss,hit)=( 0, 0)
  -- MC  [003] : (rd, wr, act, pre) = (000000041, 000000000, 000000029, 000000029), # of WR->RD switch = 0, #_refresh = 0, 11 pages acc, AB (rd, wr, act) = (000000000, 000000000, 000000000), avg_tick_in_mc= 654
               : local pred (miss,hit)=( 0, 0), global pred (miss,hit)=( 0, 0)
  -- MESH[0] : average hop = 1.00
  -- NoC [000] : (req, crq, rep) = (1312, 160, 2209), num_data_transfers = 260
  -- L1$I[000] : RD (miss, access)=( 0000000211, 0000000858)= 024.59%, PRE (hit, reqs)=( 0, 0 )
  -- L1$D[000] : RD (miss, access)=( 0000000112, 0000001617)= 006.93%, PRE (hit, reqs)=( 0, 0 )
  -- L1$D[000] : WR (miss, access)=( 0000001075, 0000002372)= 045.32%
  -- L1$D[000] : (ev_coherency, ev_capacity, coherency_access, up_req, bypass, nack)=( 0000000000, 0000000005, 0000000000, 0000000017, 0000000994, 0000000994), num_dirty_lines (pid:#) = 0 : 75 , 
